{"version":3,"sources":["actionTypes/index.jsx","actions/index.jsx","components/Topbar/index.jsx","components/Admin/index.jsx","components/Login/index.jsx","components/SalesExecutive/index.jsx","components/Home/index.jsx","components/Admin/addMedicine.jsx","components/Admin/updateInventoryDetails.jsx","components/Admin/viewInventory.jsx","components/Admin/updateExecutiveDetails.jsx","components/Admin/viewTeam.jsx","components/Admin/addSalesExecutive.jsx","components/SalesExecutive/viewOrders.jsx","components/SalesExecutive/createOrder.jsx","components/Admin/showAllOrders.jsx","components/Admin/createOrder.jsx","App.js","reportWebVitals.js","reducer/index.jsx","store/index.jsx","index.js"],"names":["ADMIN_LOGIN","ADMIN_LOGOUT","SALES_LOGIN","SALES_LOGOUT","ADD_MEDICINE","ADD_SALES_EXECUTIVE","CREATE_ORDER","ADD_TO_CART","EMPTY_CART","UPDATE_INVENTORY_LIST","UPDATE_TEAM_LIST","UPDATE_ALL_ORDERS","UPDATE_EXECUTIVE_DETAILS","UPDATE_INVENTORY_DETAILS","USER_ID_FOR_UPDATE","MEDICINE_ID_FOR_UPDATE","updateAllOrders","payload","type","userIdForUpdate","medicineIdForUpdate","createOrder","addToCart","emptyCart","connect","state","loginStatus","dispatch","logOutAdmin","history","useHistory","className","src","alt","onClick","localStorage","setItem","push","style","cursor","Admin","to","adminSignedIn","salesSignedIn","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","isAdmin","setIsAdmin","getItem","setLoginStatus","onSubmit","e","preventDefault","console","log","alert","placeholder","required","onChange","eVal","target","value","pVal","SalesExecutive","marginTop","adminLogin","salesLogin","add_medicine_to_inventory","addMedicine","medicineName","setMedicineName","manufacturerName","setManufacturerName","price","setPrice","stock","setStock","discount","setDiscount","margin","textAlign","marginLeft","medicineDetails","medicineId","Math","floor","random","inventoryList","JSON","parse","stringify","htmlFor","id","update_inventory_details","updateInventoryDetails","crossClick","medicineDetailsForUpdate","filter","user","updatedManufacturerName","setUpdatedManufacturerName","updatedPrice","setUpdatedPrice","updatedStock","setUpdatedStock","updatedDiscount","setUpdatedDiscount","inventoryListAfterUpdate","indexForUpdate","findIndex","item","disabled","inventory_list_after_delete_ById","updateInventoryList","medicine_id_for_update","isUpdateMedicineForm","setIsUpdateMedicineForm","delete_medicine_by_id","inventoryListAfterDelete","update_medicine_by_id","map","InventoryMedicineCard","props","display","justifyContent","alignItems","teamList","update_executive_details","updateExecutiveDetails","userDetailsForUpdate","salesExecutiveId","firstName","lastName","dob","gender","experience","updatedFirstName","setUpdatedFirstName","updatedLastName","setUpdatedLastName","updatedDob","setUpdatedDob","updatedExperience","setUpdatedExperience","teamListAfterUpdate","team_list_after_delete","updateTeamList","user_id_for_update","isUpdateForm","setIsUpdateForm","delete_sales_executive_by_id","executiveId","teamListAfterDelete","update_sales_executive_by_id","executiveDetails","SalesExecutiveCard","marginRight","add_executive_to_team","addSalesExecutive","setFirstName","setLastName","setDob","setGender","setExperience","allOrders","my_orders_list_after_delete","showCartItem","userId","delete_my_order_by_id","orderId","myOrdersListAfterDelete","order","myOrderDetails","OrderById","customerName","contactNumber","cartItem","totalAmount","reduce","sum","current","itemQty","itemName","borderTop","width","marginBottom","fontWeight","create_order","add_to_cart","empty_cart","setCustomerName","setContactNumber","addToCartName","setAddToCartName","addToCartQty","setAddToCartQty","cartItemDetails","orderDetails","length","orders_list_after_delete","delete_order_by_id","ordersListAfterDelete","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginReducer","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a2c211d.chunk.js","sourcesContent":["export const ADMIN_LOGIN = 'ADMIN_LOGIN';\r\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT';\r\nexport const SALES_LOGIN = 'SALES_LOGIN';\r\nexport const SALES_LOGOUT = 'SALES_LOGOUT';\r\nexport const ADD_MEDICINE = 'ADD_MEDICINE';\r\nexport const ADD_SALES_EXECUTIVE = 'ADD_SALES_EXECUTIVE';\r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const EMPTY_CART = 'EMPTY_CART';\r\nexport const UPDATE_INVENTORY_LIST = 'UPDATE_INVENTORY_LIST';\r\nexport const UPDATE_TEAM_LIST = 'UPDATE_TEAM_LIST';\r\nexport const UPDATE_ALL_ORDERS = 'UPDATE_ALL_ORDERS';\r\nexport const UPDATE_EXECUTIVE_DETAILS = 'UPDATE_EXECUTIVE_DETAILS';\r\nexport const UPDATE_INVENTORY_DETAILS = 'UPDATE_INVENTORY_DETAILS';\r\nexport const USER_ID_FOR_UPDATE = 'USER_ID_FOR_UPDATE';\r\nexport const MEDICINE_ID_FOR_UPDATE = 'MEDICINE_ID_FOR_UPDATE'","import { ADMIN_LOGIN, ADMIN_LOGOUT, SALES_LOGIN, SALES_LOGOUT, ADD_MEDICINE, ADD_SALES_EXECUTIVE, CREATE_ORDER, ADD_TO_CART, EMPTY_CART, UPDATE_INVENTORY_LIST, UPDATE_TEAM_LIST, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, USER_ID_FOR_UPDATE, MEDICINE_ID_FOR_UPDATE, UPDATE_MEDICINE_DETAILS, UPDATE_INVENTORY_DETAILS } from \"../actionTypes\"\r\n\r\nexport const adminLogin = (payload) => ({\r\n    type: ADMIN_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const adminLogout = (payload) => ({\r\n    type: ADMIN_LOGOUT,\r\n    payload\r\n})\r\n\r\nexport const salesLogin = (payload) => ({\r\n    type: SALES_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const salesLogout = (payload) => ({\r\n    type: SALES_LOGOUT,\r\n    payload\r\n})\r\n\r\n// Admin Access\r\nexport const addMedicine = (payload) => ({\r\n    type: ADD_MEDICINE,\r\n    payload\r\n})\r\n\r\nexport const addSalesExecutive = (payload) => ({\r\n    type: ADD_SALES_EXECUTIVE,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateInventoryList = (payload) => ({\r\n    type: UPDATE_INVENTORY_LIST,\r\n    payload\r\n})\r\n\r\nexport const updateTeamList = (payload) => ({\r\n    type: UPDATE_TEAM_LIST,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateAllOrders = (payload) => ({\r\n    type: UPDATE_ALL_ORDERS,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateExecutiveDetails = (payload) => ({\r\n    type: UPDATE_EXECUTIVE_DETAILS,\r\n    payload\r\n})\r\n\r\nexport const updateInventoryDetails = (payload) => ({\r\n    type: UPDATE_INVENTORY_DETAILS,\r\n    payload\r\n})\r\n\r\n\r\nexport const userIdForUpdate = (payload) => ({\r\n    type: USER_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\nexport const medicineIdForUpdate = (payload) => ({\r\n    type: MEDICINE_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\n\r\n\r\n// ORDERS BY EXECUTIVE\r\n\r\nexport const createOrder = (payload) => ({\r\n    type: CREATE_ORDER,\r\n    payload\r\n})\r\n\r\nexport const addToCart = (payload) => ({\r\n    type: ADD_TO_CART,\r\n    payload\r\n})\r\n\r\n\r\nexport const emptyCart = (payload) => ({\r\n    type: EMPTY_CART,\r\n    payload\r\n})","import React from 'react';\r\nimport \"./topbar.css\";\r\nimport { connect } from 'react-redux';\r\nimport { adminLogout } from '../../actions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Topbar = ({ loginStatus, logOutAdmin }) => {\r\n    const history = useHistory()\r\n\r\n    return (<div className=\"topbar\">\r\n        <div><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQe85XE6SrncVWlO_SYZ0mD6TV4c07-4qKMjsJ_DURer7chX7MxMKlRoYDA3RBqHApI1Eg&usqp=CAU\" alt=\"pharmacy-management-software\" /></div>\r\n        <div className=\"topbar-menu\">\r\n            {loginStatus && <p onClick={() => {\r\n                localStorage.setItem('loginStatus', false)\r\n                localStorage.setItem('adminLogin', false)\r\n                localStorage.setItem('salesLogin', false)\r\n                history.push(\"/\");\r\n                logOutAdmin()\r\n            }} style={{ cursor: 'pointer' }}>Logout</p>}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loginStatus: state.loginStatus\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logOutAdmin: () => dispatch(adminLogout(''))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar)","import React from 'react';\r\nimport \"./admin.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    return (<div className=\"admin_body\">\r\n        <div className=\"admin_header\">\r\n            <h2 className=\"inventory_menu\">INVENTORY</h2>\r\n            <Link to=\"/admin/add_medicine\" className=\"admin_button\">Add Medicine</Link>\r\n            <Link to=\"/admin/view_inventory\" className=\"admin_button\">View Inventory</Link>\r\n            <h2 className=\"team_menu\">TEAM</h2>\r\n            <Link to=\"/admin/add_sales_executive\" className=\"admin_button\">Add Sales Executive</Link>\r\n            <Link to=\"/admin/view_team\" className=\"admin_button\" >View Team</Link>\r\n            <h2 className=\"order_menu\">ORDERS</h2>\r\n            <Link to=\"/admin/show_all_orders\" className=\"admin_button\" >Show All Orders</Link>\r\n            <Link to=\"/admin/create_orders\" className=\"admin_button\" >Create Order</Link>\r\n        </div>\r\n    </div >);\r\n}\r\n\r\nexport default Admin;","import React, { useState } from 'react';\r\nimport \"./login.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogin, salesLogin } from \"../../actions\"\r\n\r\n\r\n\r\nconst Login = ({ adminSignedIn, salesSignedIn }) => {\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(true);\r\n    const [loginStatus, setLoginStatus] = useState(localStorage.getItem('loginStatus') || false);\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    if (loginStatus !== 'false') {\r\n        localStorage.setItem('loginStatus', loginStatus)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        console.log(loginEmail, loginPassword)\r\n        if (isAdmin) {\r\n            if (loginEmail === \"test-admin\" && loginPassword === \"test-admin\") {\r\n                setLoginStatus(true)\r\n                localStorage.setItem('loginStatus', true)\r\n                localStorage.setItem('adminLogin', true)\r\n                history.push('/admin/add_medicine')\r\n                adminSignedIn()\r\n            } else {\r\n                alert(\"Invalid credentials!\")\r\n            }\r\n        } else {\r\n            if (loginEmail === \"test-sales\" && loginPassword === \"test-sales\") {\r\n                setLoginStatus(true)\r\n                localStorage.setItem('loginStatus', true)\r\n                localStorage.setItem('salesLogin', true)\r\n                history.push('/sales_executive/create_order')\r\n                salesSignedIn()\r\n            } else {\r\n                alert(\"Invalid credentials!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div className=\"login-body\">\r\n        <form className=\"login-form\" onSubmit={handleLogin\r\n        }>\r\n            <h1>Login</h1>\r\n            <div className=\"btn-group\">\r\n                <p className={isAdmin ? \"button active_button\" : \"button\"} onClick={() => setIsAdmin(true)}>Admin</p>\r\n                <p className={!isAdmin ? \"button active_button\" : \"button\"} onClick={() => setIsAdmin(false)}>Executive</p>\r\n            </div>\r\n            <div className=\"form-group form_group\">\r\n                <label>Username </label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter username\" required\r\n                    onChange={(eVal) => setLoginEmail(eVal.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"form-group form_group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required onChange={(pVal) => {\r\n                    setLoginPassword(pVal.target.value)\r\n                }} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n        </form>\r\n\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    adminSignedIn: () => dispatch(adminLogin('')),\r\n    salesSignedIn: () => dispatch(salesLogin(''))\r\n\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react';\r\nimport \"./salesExecutive.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst SalesExecutive = () => {\r\n\r\n    return (<div className=\"sales_executive_body\">\r\n        <div className=\"sales_executive_header\">\r\n            <Link to=\"/sales_executive/create_order\" className=\"sales_executive_button\" style={{ marginTop: \"40px\" }}>Create Order</Link>\r\n            <Link to=\"/sales_executive/view_orders\" className=\"sales_executive_button\">View Orders</Link>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default SalesExecutive;","import React from 'react';\r\nimport Admin from '../Admin';\r\nimport Login from '../Login';\r\nimport SalesExecutive from '../SalesExecutive';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nconst Home = ({ loginStatus, adminLogin, salesLogin }) => {\r\n    console.log(loginStatus);\r\n    console.log(loginStatus === false);\r\n    return (<div>\r\n        {adminLogin === true && loginStatus === true && <Admin />}\r\n        {salesLogin === true && loginStatus === true && <SalesExecutive />}\r\n        {loginStatus === false && < Login />}\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loginStatus: state.loginStatus,\r\n    adminLogin: state.adminLogin,\r\n    salesLogin: state.salesLogin\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { useState } from 'react';\r\nimport Admin from '.';\r\nimport \"./addMedicine.css\";\r\nimport { connect } from 'react-redux'\r\nimport { addMedicine } from '../../actions/index'\r\n\r\n\r\n\r\nconst AddMedicine = ({ add_medicine_to_inventory }) => {\r\n    const [medicineName, setMedicineName] = useState('')\r\n    const [manufacturerName, setManufacturerName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [stock, setStock] = useState(0)\r\n    const [discount, setDiscount] = useState(0)\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const medicineDetails = { medicineName: medicineName, manufacturerName: manufacturerName, price: price, stock: stock, discount: discount, medicineId: Math.floor((Math.random() * 100000000) + 1) }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n\r\n        add_medicine_to_inventory(medicineDetails)\r\n        var inventoryList = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n        inventoryList.push(medicineDetails);\r\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryList));\r\n    }\r\n\r\n\r\n\r\n    return (<div>\r\n        <Admin />\r\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Medicine Details</h1>\r\n        <form className=\"add_medicine_form\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineName\">Medicine Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"medicineName\" placeholder=\"Medicine name\" onChange={(e) => { setMedicineName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"manufacturerName\">Manufacturer Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"manufacturerName\" placeholder=\"Manufacturer Name\" onChange={(e) => { setManufacturerName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicinePrice\">Price(INR)</label>\r\n                <input type=\"Number\" className=\"form-control\" id=\"medicinePrice\" placeholder=\"price\" onChange={(e) => { setPrice(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineInStock\">Stock</label>\r\n                <input type=\"Number\" className=\"form-control\" id=\"medicineInStock\" placeholder=\"Available quantity\" onChange={(e) => { setStock(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"discountPercent\">Discount</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"discountPercent\" placeholder=\"Discount in percent\" onChange={(e) => { setDiscount(e.target.value) }} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add to the Inventory</button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_medicine_to_inventory: (payload) => dispatch(addMedicine(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddMedicine)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateInventoryDetails } from '../../actions';\r\nimport \"./updateExecutiveDetails.css\"\r\n\r\n\r\n\r\nconst UpdateInventoryDetails = ({ medicineIdForUpdate, inventoryList, update_inventory_details, crossClick }) => {\r\n    medicineIdForUpdate = medicineIdForUpdate || localStorage.getItem('medicineIdForUpdate')\r\n    const medicineDetailsForUpdate = inventoryList.filter(user => user.medicineId == medicineIdForUpdate);\r\n    const { medicineName, manufacturerName, price, stock, discount } = medicineDetailsForUpdate[0];\r\n    const [updatedManufacturerName, setUpdatedManufacturerName] = useState(manufacturerName)\r\n    const [updatedPrice, setUpdatedPrice] = useState(price)\r\n    const [updatedStock, setUpdatedStock] = useState(stock)\r\n    const [updatedDiscount, setUpdatedDiscount] = useState(discount)\r\n\r\n    console.log(medicineIdForUpdate)\r\n    console.log(medicineDetailsForUpdate)\r\n\r\n    console.log(discount)\r\n    // Handle Update Details\r\n    const handleMedicineUpdateDetails = (e) => {\r\n        e.preventDefault();\r\n        var inventoryListAfterUpdate = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n        const indexForUpdate = inventoryListAfterUpdate.findIndex(item => item.medicineId === medicineIdForUpdate\r\n        )\r\n        console.log(inventoryListAfterUpdate)\r\n        inventoryListAfterUpdate[indexForUpdate].discount = updatedDiscount;\r\n        inventoryListAfterUpdate[indexForUpdate].manufacturerName = updatedManufacturerName;\r\n        inventoryListAfterUpdate[indexForUpdate].price = updatedPrice;\r\n        inventoryListAfterUpdate[indexForUpdate].stock = updatedStock;\r\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterUpdate));\r\n\r\n        localStorage.setItem('isUpdateMedicineForm', false)\r\n        update_inventory_details(inventoryListAfterUpdate)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (<div style={{ textAlign: 'center' }} className=\"add_executive_details_container\">\r\n        <form className=\"add_executive_form\" onSubmit={handleMedicineUpdateDetails} >\r\n            <p onClick={crossClick} className=\"remove_update_form_icon\"><i className=\"fas fa-times\"></i></p>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Medicine Name\">Medicine Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"Medicine Name\" placeholder=\"Medicine Name\" disabled value={medicineName} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ManufacturerName\">Manufacturer Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"ManufacturerName\" placeholder=\"Manufacturer Name\" onChange={(e) => { setUpdatedManufacturerName(e.target.value) }} value={updatedManufacturerName} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Price\">Price(INR)</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"Price\" placeholder=\"Price\" onChange={(e) => { setUpdatedPrice(e.target.value) }} value={updatedPrice} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Stock\">Stock</label>\r\n                <input type=\"Number\" className=\"form-control\" id=\"Stock\" placeholder=\"Stock in years\" onChange={(e) => {\r\n                    setUpdatedStock(e.target.value)\r\n                }} value={updatedStock} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Discount\">Discount</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"Discount\" placeholder=\"Discount\" onChange={(e) => { setUpdatedDiscount(e.target.value) }} value={updatedDiscount} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Update Details</button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inventoryList: state.inventoryList,\r\n    medicineIdForUpdate: state.medicineIdForUpdate\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    update_inventory_details: (payload) => dispatch(updateInventoryDetails(payload)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateInventoryDetails)","import React, { useState } from 'react';\r\nimport Admin from '.';\r\nimport { connect } from 'react-redux';\r\nimport \"./viewInventory.css\"\r\nimport { updateInventoryList } from '../../actions';\r\nimport UpdateInventoryDetails from './updateInventoryDetails';\r\nimport { medicineIdForUpdate } from '../../actions';\r\n\r\n\r\nconst ViewInventory = ({ inventoryList, inventory_list_after_delete_ById, medicine_id_for_update }) => {\r\n    const [isUpdateMedicineForm, setIsUpdateMedicineForm] = useState(false);\r\n\r\n\r\n    const delete_medicine_by_id = (medicineName) => {\r\n        var inventoryListAfterDelete = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n        inventoryListAfterDelete = inventoryListAfterDelete.filter(item => item.medicineName !== medicineName)\r\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterDelete));\r\n        inventory_list_after_delete_ById(medicineName)\r\n    }\r\n\r\n\r\n    //   // Update Medicine details By ID\r\n    const update_medicine_by_id = (id) => {\r\n        setIsUpdateMedicineForm(true)\r\n        console.log(id)\r\n        localStorage.setItem('medicineIdForUpdate', id)\r\n        medicine_id_for_update(id)\r\n    }\r\n\r\n    const crossClick = () => {\r\n        console.log(\"Clicked\")\r\n        setIsUpdateMedicineForm(false)\r\n    }\r\n\r\n    return (<div className=\"view_inventory\">\r\n        <Admin />\r\n        {isUpdateMedicineForm && <UpdateInventoryDetails medicineIdForUpdate={medicineIdForUpdate} crossClick={crossClick} />}\r\n\r\n        <div className=\"inventory_container\">\r\n            <div className=\"inventory_container_header\">\r\n                <p>Medicine</p>\r\n                <p>Manufacturer</p>\r\n                <p>Price</p>\r\n                <p>Quantity</p>\r\n                <p>Discount</p>\r\n            </div>\r\n            {inventoryList.map(item => <InventoryMedicineCard medicineDetails={item} delete_medicine_by_id={delete_medicine_by_id} key={Math.random()} update_medicine_by_id={update_medicine_by_id} />)}\r\n        </div>\r\n    </div >);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inventoryList: state.inventoryList,\r\n    medicineIdForUpdate: state.medicineIdForUpdate\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    inventory_list_after_delete_ById: (payload) => dispatch(updateInventoryList(payload)),\r\n    medicine_id_for_update: (payload) => dispatch(medicineIdForUpdate(payload))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInventory)\r\n\r\n\r\n\r\n\r\n// Inventory Medicne card\r\nconst InventoryMedicineCard = (props) => {\r\n    const { medicineName, manufacturerName, price, stock, discount, medicineId } = props.medicineDetails;\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n            <div className=\"medicine-card\" key={Math.random()} >\r\n                <span className=\"medicine-name\">{medicineName}</span>\r\n                <span className=\"manufacturer-name\">{manufacturerName}</span>\r\n                <span className=\"medicine-price\">{price}</span>\r\n                <span className=\"medicine-quantity\">{stock}</span>\r\n                <span className=\"medicine-discount\">{discount}</span>\r\n            </div>\r\n            <div style={{ marginLeft: \"10px\", cursor: \"pointer\" }} onClick={() => props.delete_medicine_by_id(medicineName)} > <i className=\"fas fa-trash\"></i></div>\r\n            <div style={{ cursor: \"pointer\", marginLeft: \"10px\" }} onClick={() => props.update_medicine_by_id(medicineId)} > <i className=\"fas fa-edit\"></i></div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateExecutiveDetails } from '../../actions';\r\nimport \"./updateExecutiveDetails.css\"\r\n\r\n\r\n\r\nconst UpdateExecutiveDetails = ({ userIdForUpdate, teamList, update_executive_details, crossClick }) => {\r\n    userIdForUpdate = userIdForUpdate || localStorage.getItem('userIdForUpdate')\r\n    const userDetailsForUpdate = teamList.filter(user => user.salesExecutiveId == userIdForUpdate);\r\n    console.log(userDetailsForUpdate[0]);\r\n    const { firstName, lastName, dob, gender, experience } = userDetailsForUpdate[0];\r\n    const [updatedFirstName, setUpdatedFirstName] = useState(firstName)\r\n    const [updatedLastName, setUpdatedLastName] = useState(lastName)\r\n    const [updatedDob, setUpdatedDob] = useState(dob)\r\n    const [updatedExperience, setUpdatedExperience] = useState(experience)\r\n\r\n    // Handle Update Details\r\n    const handleExecutiveUpdateDetails = (e) => {\r\n        e.preventDefault();\r\n        var teamListAfterUpdate = JSON.parse(localStorage.getItem('teamList')) || [];\r\n        const indexForUpdate = teamListAfterUpdate.findIndex(item => item.salesExecutiveId === userIdForUpdate\r\n        )\r\n        console.log(teamListAfterUpdate)\r\n        teamListAfterUpdate[indexForUpdate].firstName = updatedFirstName;\r\n        teamListAfterUpdate[indexForUpdate].lastName = updatedLastName;\r\n        teamListAfterUpdate[indexForUpdate].dob = updatedDob;\r\n        teamListAfterUpdate[indexForUpdate].experience = updatedExperience;\r\n        localStorage.setItem('teamList', JSON.stringify(teamListAfterUpdate));\r\n\r\n        localStorage.setItem('isUpdateForm', false)\r\n        update_executive_details(teamListAfterUpdate)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (<div style={{ textAlign: 'center' }} className=\"add_executive_details_container\">\r\n        <form className=\"add_executive_form\" onSubmit={handleExecutiveUpdateDetails} >\r\n            <p onClick={crossClick} className=\"remove_update_form_icon\"><i className=\"fas fa-times\"></i></p>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"First name\" onChange={(e) => { setUpdatedFirstName(e.target.value) }} value={updatedFirstName} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" onChange={(e) => { setUpdatedLastName(e.target.value) }} value={updatedLastName} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Dob\">DOB</label>\r\n                <input type=\"Date\" className=\"form-control\" id=\"Dob\" placeholder=\"dob\" onChange={(e) => { setUpdatedDob(e.target.value) }} value={updatedDob} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Gender\">Gender(M/F)</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"Gender\" placeholder=\"Gender\" disabled value={gender} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"experience\">Experience</label>\r\n                <input type=\"number\" className=\"form-control\" id=\"experience\" placeholder=\"Experience in years\" onChange={(e) => {\r\n\r\n                    setUpdatedExperience(e.target.value)\r\n                }} value={updatedExperience} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Update Details</button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamList: state.teamList,\r\n    userIdForUpdate: state.userIdForUpdate\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    update_executive_details: (payload) => dispatch(updateExecutiveDetails(payload)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateExecutiveDetails)","import React, { useState } from 'react';\r\nimport Admin from '.';\r\nimport { connect } from 'react-redux';\r\nimport \"./viewTeam.css\";\r\nimport { updateTeamList } from \"../../actions/index\";\r\nimport UpdateExecutiveDetails from './updateExecutiveDetails';\r\nimport { userIdForUpdate } from \"../../actions/index\"\r\n\r\n\r\nconst ViewTeam = ({ teamList, team_list_after_delete, user_id_for_update }) => {\r\n    const [isUpdateForm, setIsUpdateForm] = useState(false);\r\n\r\n    const delete_sales_executive_by_id = (executiveId) => {\r\n        console.log(executiveId)\r\n        var teamListAfterDelete = JSON.parse(localStorage.getItem('teamList')) || [];\r\n        teamListAfterDelete = teamListAfterDelete.filter(item => item.salesExecutiveId !== executiveId)\r\n        localStorage.setItem('teamList', JSON.stringify(teamListAfterDelete));\r\n        team_list_after_delete(executiveId)\r\n    }\r\n\r\n    // Update Sales Executive Details By ID\r\n    const update_sales_executive_by_id = (id) => {\r\n        setIsUpdateForm(true)\r\n        localStorage.setItem('userIdForUpdate', id)\r\n        user_id_for_update(id)\r\n    }\r\n\r\n\r\n    const crossClick = () => {\r\n        console.log(\"Clicked\")\r\n        setIsUpdateForm(false)\r\n    }\r\n\r\n    return (<div className=\"view_team\">\r\n        <Admin />\r\n        {isUpdateForm && <UpdateExecutiveDetails userIdForUpdate={userIdForUpdate} crossClick={crossClick} />}\r\n        <div className=\"team_container\">\r\n            <div className=\"team_container_header\">\r\n                <p className=\"sales_executive_id\">UserId</p>\r\n                <p className=\"sales_executive_fname\">First Name</p>\r\n                <p className=\"sales_executive_lname\">Last Name</p>\r\n                <p className=\"sales_executive_dob\">DOB</p>\r\n                <p className=\"sales_executive_gender\">Gender</p>\r\n                <p className=\"sales_executive_experience\">Experience</p>\r\n            </div>\r\n            {teamList.map(item => <SalesExecutiveCard executiveDetails={item} delete_sales_executive_by_id={delete_sales_executive_by_id} key={Math.random()} update_sales_executive_by_id={update_sales_executive_by_id} />)}\r\n        </div>\r\n\r\n    </div >);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamList: state.teamList,\r\n    userIdForUpdate: state.userIdForUpdate\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    team_list_after_delete: (payload) => dispatch(updateTeamList(payload)),\r\n    user_id_for_update: (payload) => dispatch(userIdForUpdate(payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewTeam)\r\n\r\n\r\n\r\n\r\n// Sales Executive card\r\nconst SalesExecutiveCard = (props) => {\r\n    const { firstName, lastName, dob, gender, experience, salesExecutiveId } = props.executiveDetails\r\n    return (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n            <div className=\"sales-executive-card\" key={Math.random()} >\r\n                <span className=\"sales_executive_id\">{salesExecutiveId}</span>\r\n                <span className=\"sales_executive_fname\">{firstName}</span>\r\n                <span className=\"sales_executive_fname\">{lastName}</span>\r\n                <span className=\"sales_executive_dob\">{dob}</span>\r\n                <span className=\"sales_executive_gender\">{gender}</span>\r\n                <span className=\"sales_executive_experience\">{experience}</span>\r\n            </div>\r\n            <div style={{ marginLeft: \"10px\", cursor: \"pointer\", marginRight: \"10px\" }} onClick={() => props.delete_sales_executive_by_id(salesExecutiveId)} > <i className=\"fas fa-trash\"></i></div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={() => props.update_sales_executive_by_id(salesExecutiveId)} > <i className=\"fas fa-edit\"></i></div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Admin from '.';\r\nimport \"./addSalesExecutive.css\";\r\nimport \"./addMedicine.css\"\r\nimport { connect } from 'react-redux'\r\nimport { addSalesExecutive } from '../../actions/index'\r\n\r\n\r\n\r\nconst AddMedicine = ({ add_executive_to_team }) => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [experience, setExperience] = useState(0)\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const executiveDetails = { firstName: firstName, lastName: lastName, dob: dob, gender: gender, experience: experience, salesExecutiveId: Math.floor((Math.random() * 100000000) + 1) }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n\r\n        add_executive_to_team(executiveDetails)\r\n        var teamList = JSON.parse(localStorage.getItem('teamList')) || [];\r\n        teamList.push(executiveDetails);\r\n        localStorage.setItem('teamList', JSON.stringify(teamList));\r\n    }\r\n\r\n\r\n\r\n    return (<div>\r\n        <Admin />\r\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Executive Details</h1>\r\n        <form className=\"add_executive_form_details\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"First name\" onChange={(e) => { setFirstName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" onChange={(e) => { setLastName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Dob\">DOB</label>\r\n                <input type=\"Date\" className=\"form-control\" id=\"Dob\" placeholder=\"dob\" onChange={(e) => { setDob(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Gender\">Gender(M/F)</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"Gender\" placeholder=\"Gender\" onChange={(e) => { setGender(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"experience\">Experience</label>\r\n                <input type=\"number\" className=\"form-control\" id=\"experience\" placeholder=\"Experience in years\" onChange={(e) => { setExperience(e.target.value) }} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add to the team</button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_executive_to_team: (payload) => dispatch(addSalesExecutive(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddMedicine)","import React from 'react';\r\nimport SalesExecutive from '../SalesExecutive';\r\nimport { connect } from 'react-redux';\r\nimport \"./viewOrder.css\"\r\nimport { updateAllOrders } from '../../actions';\r\n\r\n\r\nconst ViewOrders = ({ allOrders, my_orders_list_after_delete }) => {\r\n    console.log(allOrders)\r\n    const showCartItem = allOrders.filter(item => item.userId === 10001)\r\n    const delete_my_order_by_id = (orderId) => {\r\n        console.log(orderId)\r\n        var myOrdersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        myOrdersListAfterDelete = myOrdersListAfterDelete.filter(item => item.orderId !== orderId)\r\n        localStorage.setItem('allOrders', JSON.stringify(myOrdersListAfterDelete));\r\n        my_orders_list_after_delete(orderId)\r\n    }\r\n\r\n    return (<div>\r\n        <SalesExecutive />\r\n        <h1 style={{ textAlign: \"center\", marginTop: \"20px\" }}>MY ORDERS</h1>\r\n\r\n        {showCartItem.map(order => <OrderById key={Math.random()} myOrderDetails={order}\r\n            delete_my_order_by_id={delete_my_order_by_id} />)}\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allOrders: state.allOrders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    my_orders_list_after_delete: (payload) => { dispatch(updateAllOrders(payload)) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders)\r\n\r\n\r\nconst OrderById = (props) => {\r\n    const { customerName, contactNumber, orderId, cartItem } = props.myOrderDetails;\r\n    const totalAmount = cartItem.reduce(function (sum, current) {\r\n        return sum + (current.itemQty) * 10;\r\n    }, 0);\r\n    return (\r\n        <div className=\"my-order-list\" key={orderId}>\r\n            <div className=\"my-order-user-details\">\r\n                <p>CUSTOMER NAME: <span>{customerName}</span></p>\r\n                <p>CONTACT NUMBER: <span>{contactNumber}</span></p>\r\n                <p>ORDER ID : <span>{orderId}</span></p>\r\n            </div>\r\n            <div className=\"cart-item-header \">\r\n                <h4 className=\"cart-item-name\">Name</h4>\r\n                <h4>Quantity</h4>\r\n                <h4>Amount</h4>\r\n            </div>\r\n            {cartItem.map(item =>\r\n                <div className=\"cart-item-details\" key={Math.random()}>\r\n                    <p className=\"cart-item-name\">{item.itemName}</p>\r\n                    <p>{item.itemQty}</p>\r\n                    <p>{item.itemQty * 10}</p>\r\n                </div>\r\n            )}\r\n            { <p style={{ borderTop: \"1px solid gray\", width: \"100%\", marginTop: \"10px\", marginBottom: 0 }}></p>}\r\n            { <div style={{ marginTop: \"0px\" }}>\r\n                <h3 style={{ margin: 0, marginLeft: \"58%\", marginTop: \"10px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\r\n            </div>}\r\n            <div className=\"delete_order_icon\" onClick={() => props.delete_my_order_by_id(orderId)} > <i className=\"fas fa-trash\"></i></div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport SalesExecutive from '.';\r\nimport { createOrder, emptyCart } from \"../../actions/index\";\r\nimport { addToCart } from \"../../actions/index\"\r\nimport \"./createOrder.css\"\r\n\r\n\r\n\r\nconst CreateExecutiveOrder = ({ create_order, add_to_cart, cartItem, empty_cart }) => {\r\n    const [customerName, setCustomerName] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [addToCartName, setAddToCartName] = useState('');\r\n    const [addToCartQty, setAddToCartQty] = useState('');\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const orderDetails = { customerName: customerName, contactNumber: contactNumber, cartItem: cartItem, orderId: Math.floor((Math.random() * 100000000) + 1), userId: 10001 }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n\r\n        create_order(orderDetails)\r\n        var allOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        allOrders.push(orderDetails);\r\n        localStorage.setItem('allOrders', JSON.stringify(allOrders));\r\n\r\n        // Set Cart To Empty\r\n\r\n        localStorage.setItem('cartItem', JSON.stringify([]));\r\n        empty_cart()\r\n    }\r\n\r\n\r\n    const handleAddToCart = (e) => {\r\n\r\n        const cartItemDetails = { itemName: addToCartName, itemQty: addToCartQty }\r\n\r\n        cartItem = JSON.parse(localStorage.getItem('cartItem')) || [];\r\n        cartItem.push(cartItemDetails);\r\n        localStorage.setItem('cartItem', JSON.stringify(cartItem));\r\n        add_to_cart(cartItemDetails);\r\n    }\r\n\r\n    // Total amount\r\n    const totalAmount = cartItem.reduce(function (sum, current) {\r\n        return sum + (current.itemQty) * 10;\r\n    }, 0);\r\n\r\n    return (<div>\r\n        <SalesExecutive />\r\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Make an Order</h1>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <div className=\"add_to_cart\">\r\n                <label type=\"text\" onChange={(e) => setAddToCartName(e.target.value)}>Medicine <input /></label>\r\n                <label onChange={(e) => setAddToCartQty(e.target.value)}>Quantity <input type=\"Number\" /></label>\r\n                <p>Price per unit {20}</p>\r\n                <button className=\"btn btn-secondary\" onClick={handleAddToCart}>Add to Cart</button>\r\n            </div>\r\n            <form className=\"create_order_form\" onSubmit={handleFormSubmit}>\r\n                <div className=\"executive_details\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"customerName\">Customer Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"customerName\" placeholder=\"Cutsomer name\" onChange={(e) => { setCustomerName(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"contactNumber\" placeholder=\"Contact Number\" onChange={(e) => { setContactNumber(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n\r\n                {cartItem.length > 0 && <div className=\"cart-item-header\">\r\n                    <p className=\"cart-item-name\">Name</p>\r\n                    <p>Quantity</p>\r\n                    <p>Amount</p>\r\n                </div>}\r\n                {cartItem.map(item =>\r\n                    <div className=\"cart-item-details\" key={Math.random()}>\r\n                        <p className=\"cart-item-name\">{item.itemName}</p>\r\n                        <p>{item.itemQty}</p>\r\n                        <p>{item.itemQty * 10}</p>\r\n                    </div>\r\n                )}\r\n                {cartItem.length > 0 && <p style={{ borderTop: \"1px solid gray\", width: \"500px\", marginTop: \"10px\", marginBottom: 0 }}></p>}\r\n                {cartItem.length > 0 && <div style={{ marginTop: \"0px\" }}>\r\n                    <h3 style={{ margin: 0, marginLeft: \"160px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\r\n                </div>}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Create Order</button>\r\n                <p className=\"clear-cart-button\" onClick={() => {\r\n                    empty_cart()\r\n                }}>Clear Cart</p>\r\n\r\n            </form>\r\n        </div>\r\n    </div >);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cartItem: state.cartItem\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    create_order: (payload) => dispatch(createOrder(payload)),\r\n    add_to_cart: (payload) => dispatch(addToCart(payload)),\r\n    empty_cart: () => dispatch(emptyCart())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateExecutiveOrder)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"../SalesExecutive/viewOrders\"\r\nimport Admin from '.';\r\nimport \"./showAllOrders.css\";\r\nimport { updateAllOrders } from \"../../actions/index\"\r\n\r\n\r\nconst ViewOrders = ({ allOrders, orders_list_after_delete }) => {\r\n\r\n    const delete_order_by_id = (orderId) => {\r\n        console.log(orderId)\r\n        var ordersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        ordersListAfterDelete = ordersListAfterDelete.filter(item => item.orderId !== orderId)\r\n        localStorage.setItem('allOrders', JSON.stringify(ordersListAfterDelete));\r\n        orders_list_after_delete(orderId)\r\n    }\r\n    return (<div>\r\n        <Admin />\r\n        <h1 style={{ textAlign: \"center\", marginTop: \"20px\", marginLeft: '150px' }}>ALL ORDERS</h1>\r\n        {allOrders.map(order => <OrderById key={Math.random()} myOrderDetails={order} delete_order_by_id={delete_order_by_id} />)}\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allOrders: state.allOrders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    orders_list_after_delete: (payload) => dispatch(updateAllOrders(payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders)\r\n\r\n\r\nconst OrderById = (props) => {\r\n    const { customerName, contactNumber, orderId, cartItem } = props.myOrderDetails;\r\n    const totalAmount = cartItem.reduce(function (sum, current) {\r\n        return sum + (current.itemQty) * 10;\r\n    }, 0);\r\n    return (\r\n        <div className=\"my-order-list\" style={{ width: \"75%\" }}>\r\n            <div className=\"my-order-user-details\">\r\n                <p>CUSTOMER NAME: <span>{customerName}</span></p>\r\n                <p>CONTACT NUMBER: <span>{contactNumber}</span></p>\r\n                <p>ORDER ID : <span>{orderId}</span></p>\r\n            </div>\r\n            <div className=\"cart-item-header \">\r\n                <h4 className=\"cart-item-name\">Name</h4>\r\n                <h4>Quantity</h4>\r\n                <h4>Amount</h4>\r\n            </div>\r\n            {cartItem.map(item =>\r\n                <div className=\"cart-item-details\" key={Math.random()}>\r\n                    <p className=\"cart-item-name\">{item.itemName}</p>\r\n                    <p>{item.itemQty}</p>\r\n                    <p>{item.itemQty * 10}</p>\r\n                </div>\r\n            )}\r\n            { <p style={{ borderTop: \"1px solid gray\", width: \"100%\", marginTop: \"10px\", marginBottom: 0 }}></p>}\r\n            { <div style={{ marginTop: \"0px\" }}>\r\n                <h3 style={{ margin: 0, marginLeft: \"58%\", marginTop: \"10px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\r\n            </div>}\r\n            <div className=\"delete_order_icon\" onClick={() => props.delete_order_by_id(orderId)} > <i className=\"fas fa-trash\"></i></div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Admin from '.';\r\nimport { createOrder, emptyCart } from \"../../actions/index\";\r\nimport { addToCart } from \"../../actions/index\"\r\nimport \"../SalesExecutive/createOrder\"\r\n\r\n\r\n\r\nconst CreateAdminOrder = ({ create_order, add_to_cart, cartItem, empty_cart }) => {\r\n    const [customerName, setCustomerName] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [addToCartName, setAddToCartName] = useState('');\r\n    const [addToCartQty, setAddToCartQty] = useState('');\r\n\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const orderDetails = { customerName: customerName, contactNumber: contactNumber, cartItem: cartItem, orderId: Math.floor((Math.random() * 100000000) + 1) }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n\r\n        create_order(orderDetails)\r\n        var allOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        allOrders.push(orderDetails);\r\n        localStorage.setItem('allOrders', JSON.stringify(allOrders));\r\n\r\n\r\n        localStorage.setItem('cartItem', JSON.stringify([]));\r\n        empty_cart()\r\n    }\r\n    const handleAddToCart = (e) => {\r\n\r\n        const cartItemDetails = { itemName: addToCartName, itemQty: addToCartQty }\r\n\r\n        cartItem = JSON.parse(localStorage.getItem('cartItem')) || [];\r\n        cartItem.push(cartItemDetails);\r\n        localStorage.setItem('cartItem', JSON.stringify(cartItem));\r\n        add_to_cart(cartItemDetails);\r\n    }\r\n    // Total amount\r\n    const totalAmount = cartItem.reduce(function (sum, current) {\r\n        return sum + (current.itemQty) * 10;\r\n    }, 0);\r\n\r\n    return (<div>\r\n        <Admin />\r\n        <h1 style={{ margin: \"20px\", textAlign: \"center\", marginLeft: \"14%\" }}>Make an Order</h1>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <div className=\"add_to_cart\">\r\n                <label type=\"text\" onChange={(e) => setAddToCartName(e.target.value)}>Medicine <input /></label>\r\n                <label type=\"Number\" onChange={(e) => setAddToCartQty(e.target.value)}>Quantity <input /></label>\r\n                <p>Price per unit {20}</p>\r\n                <button className=\"btn btn-secondary\" onClick={handleAddToCart}>Add to Cart</button>\r\n            </div>\r\n            <form className=\"create_order_form\" onSubmit={handleFormSubmit}>\r\n                <div className=\"executive_details\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"customerName\">Customer Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"customerName\" placeholder=\"Cutsomer name\" onChange={(e) => { setCustomerName(e.target.value) }} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"contactNumber\" placeholder=\"Contact Number\" onChange={(e) => { setContactNumber(e.target.value) }} required />\r\n                    </div>\r\n                </div>\r\n\r\n                {cartItem.length > 0 && <div className=\"cart-item-header\">\r\n                    <p className=\"cart-item-name\">Name</p>\r\n                    <p>Quantity</p>\r\n                    <p>Amount</p>\r\n                </div>}\r\n                {cartItem.map(item =>\r\n                    <div className=\"cart-item-details\" key={Math.random()}>\r\n                        <p className=\"cart-item-name\">{item.itemName}</p>\r\n                        <p>{item.itemQty}</p>\r\n                        <p>{item.itemQty * 10}</p>\r\n                    </div>\r\n                )}\r\n                {cartItem.length > 0 && <p style={{ borderTop: \"1px solid gray\", width: \"500px\", marginTop: \"10px\", marginBottom: 0 }}></p>}\r\n                {cartItem.length > 0 && <div style={{ marginTop: \"0px\" }}>\r\n                    <h3 style={{ margin: 0, marginLeft: \"160px\" }}>Total Amount = <span style={{ fontWeight: 300 }}>{totalAmount}</span></h3>\r\n                </div>}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Create Order</button>\r\n                <p className=\"clear-cart-button\" onClick={() => {\r\n                    empty_cart()\r\n                }}>Clear Cart</p>\r\n\r\n            </form>\r\n        </div>\r\n    </div >);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cartItem: state.cartItem\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    create_order: (payload) => dispatch(createOrder(payload)),\r\n    add_to_cart: (payload) => dispatch(addToCart(payload)),\r\n    empty_cart: () => dispatch(emptyCart())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAdminOrder)","import './App.css';\nimport React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import 'antd/dist/antd.css';\nimport Topbar from './components/Topbar';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport AddMedicine from './components/Admin/addMedicine';\nimport ViewInventory from './components/Admin/viewInventory';\nimport ViewTeam from './components/Admin/viewTeam';\nimport SalesExecutive from './components/Admin/addSalesExecutive';\nimport ViewOrders from './components/SalesExecutive/viewOrders';\nimport CreateExecutiveOrder from \"./components/SalesExecutive/createOrder\"\nimport ShowAllOrders from './components/Admin/showAllOrders';\nimport CreateAdminOrder from \"./components/Admin/createOrder\"\n\n\nfunction App({ adminLogin, loginStatus, salesLogin }) {\n  return (\n    <div>\n      <Router>\n        <Topbar />\n        {console.log(adminLogin, loginStatus)}\n        <Switch>\n          <Route path=\"/\" exact><Home /></Route>\n          <Route path=\"/login\" exact><Home /></Route>\n          {adminLogin && loginStatus && <Route path=\"/\" exact><AddMedicine /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><AddMedicine /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_inventory\"><ViewInventory /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><SalesExecutive /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewTeam /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowAllOrders /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateAdminOrder /> </Route>}\n          {salesLogin && loginStatus && <Route path=\"/sales_executive/create_order\"><CreateExecutiveOrder /></Route>}\n          {salesLogin && loginStatus && <Route path=\"/sales_executive/view_orders\"><ViewOrders /> </Route>}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  adminLogin: state.adminLogin,\n  loginStatus: state.loginStatus,\n  salesLogin: state.salesLogin\n})\n\n\nexport default connect(mapStateToProps, null)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_MEDICINE, ADD_SALES_EXECUTIVE, ADD_TO_CART, ADMIN_LOGIN, ADMIN_LOGOUT, CREATE_ORDER, EMPTY_CART, MEDICINE_ID_FOR_UPDATE, SALES_LOGIN, SALES_LOGOUT, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, UPDATE_INVENTORY_DETAILS, UPDATE_INVENTORY_LIST, UPDATE_MEDICINE_DETAILS, UPDATE_TEAM_LIST, USER_ID_FOR_UPDATE } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    loginStatus: localStorage.getItem('loginStatus') === 'true' ? true : false,\r\n    adminLogin: localStorage.getItem('adminLogin') === 'true' ? true : false,\r\n    salesLogin: localStorage.getItem('salesLogin') === 'true' ? true : false,\r\n    inventoryList: JSON.parse(localStorage.getItem('inventoryList')) || [],\r\n    teamList: JSON.parse(localStorage.getItem('teamList')) || [],\r\n    allOrders: JSON.parse(localStorage.getItem('allOrders')) || [],\r\n    cartItem: JSON.parse(localStorage.getItem('cartItem')) || [],\r\n    userIdForUpdate: localStorage.getItem('userIdForUpdate'),\r\n    medicineIdForUpdate: localStorage.getItem('medicineIdForUpdate'),\r\n}\r\n\r\nconst loginReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADMIN_LOGIN:\r\n            return { ...state, loginStatus: true, adminLogin: true, }\r\n        case ADMIN_LOGOUT:\r\n            return { ...state, loginStatus: false, adminLogin: false }\r\n        case SALES_LOGIN:\r\n            return { ...state, loginStatus: true, salesLogin: true }\r\n        case SALES_LOGOUT:\r\n            return { ...state, loginStatus: false, salesLogin: false }\r\n        case ADD_MEDICINE:\r\n            return { ...state, inventoryList: [...state.inventoryList, payload] }\r\n        case ADD_SALES_EXECUTIVE:\r\n            return { ...state, teamList: [...state.teamList, payload] }\r\n        case CREATE_ORDER:\r\n            return { ...state, allOrders: [...state.allOrders, payload] }\r\n        case ADD_TO_CART:\r\n            return { ...state, cartItem: [...state.cartItem, payload] }\r\n        case EMPTY_CART:\r\n            return { ...state, cartItem: [] }\r\n        case UPDATE_INVENTORY_LIST:\r\n            return { ...state, inventoryList: state.inventoryList.filter(item => item.medicineName !== payload) }\r\n        case UPDATE_TEAM_LIST:\r\n            return { ...state, teamList: state.teamList.filter(item => item.salesExecutiveId !== payload) }\r\n        case UPDATE_ALL_ORDERS:\r\n            return { ...state, allOrders: state.allOrders.filter(item => item.orderId !== payload) }\r\n        case UPDATE_EXECUTIVE_DETAILS:\r\n            return { ...state, teamList: payload }\r\n        case UPDATE_INVENTORY_DETAILS:\r\n            return { ...state, inventoryList: payload }\r\n        case MEDICINE_ID_FOR_UPDATE:\r\n            return { ...state, medicineIdForUpdate: payload }\r\n        case USER_ID_FOR_UPDATE:\r\n            return { ...state, userIdForUpdate: payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import { createStore } from 'redux';\r\nimport reducer from '../reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}